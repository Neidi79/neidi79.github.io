{"name":"Neidi79.github.io","tagline":"","body":"<!DOCTYPE html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Tabakprävention</title>\r\n</head>\r\n\r\n<style>\r\n\r\nh1 {\r\n    font-family: \"Helvetica\";\r\n    font-size: 300%;\r\n    text-align: center;\r\n}\r\n\r\np {\r\n    margin-left: 50px;\r\n    margin-right: 50px;\r\n}\r\n/*scrollbar ausblenden*/\r\n::-webkit-scrollbar {\r\n    display: none;\r\n} \r\n    \r\n    \r\nbody {\r\n\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n    margin: auto;\r\n    position: absolute;\r\n    background-color: rgb(235, 237, 210);\r\n}\r\n\r\nform {\r\n    text-align: center;\r\n    right: 20px;\r\n    top: 15px;\r\n}\r\n\r\n.node {\r\n    border: solid 1px white;\r\n    font: 10px sans-serif;\r\n    line-height: 12px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    text-indent: 2px;\r\n}\r\n\r\n</style>\r\n\r\n<body>\r\n<h1>Tabakprävention</h1>\r\n<p>\r\nAm 21. März 2003 ergänzte das Parlament das Bundesgesetz über die Tabakbesteuerung\r\n(SR 641.31) um einen Passus, der die Abgabe von 0.13 Rappen\r\npro in der Schweiz verkaufte Zigarette vorsieht.<br> Mit dieser Abgabe sollte ein Sonderfonds\r\nzur Förderung der Tabakprävention gespiesen werden.<br>\r\nAm 1. August 2003 trat der neu eingefügte Art. 28 Abs. 2 Bst. c des Bundesgesetzes\r\nvom 21. März 1969 über die Tabakbesteuerung in Kraft. Diese Gesetzesergänzung\r\nverpflichtet die Hersteller und Importeure von Zigaretten zu einer Abgabe\r\nin einen Tabakpräventionsfonds (TPF).<br> Sie legt zugleich fest, dass der\r\nFonds von einer Präventionsorganisation unter Aufsicht des Bundesamtes für\r\nGesundheit und in Zusammenarbeit mit dem Bundesamt für Sport verwaltet wird.\r\n</p>\r\n\r\n\r\n<form>\r\n    <label><input data-src=\"daten_sprachregion.json\" type=\"radio\" name=\"mode\" value=\"size\" > Sprachregionen</label>\r\n    <label><input data-src=\"daten_foerder.json\" type=\"radio\" name=\"mode\" value=\"size\"> Förderbereiche</label>\r\n    <label><input data-src=\"daten_ziel.json\" type=\"radio\" name=\"mode\" value=\"size\"> Zielgruppen</label>\r\n    <label><input data-src=\"daten_setting.json\" type=\"radio\" name=\"mode\" value=\"size\"> Settings</label>\r\n    \r\n</form>\r\n<script src=\"d3/d3.min.js\"></script>\r\n<script>\r\n\r\nvar margin = {top: 50, right: 50, bottom: 50, left: 50},\r\n    width = outerWidth - margin.left - margin.right,\r\n    height = 600 - margin.top - margin.bottom;\r\n\r\nvar color = d3.scale.category20();\r\n\r\nvar treemap = d3.layout.treemap()\r\n    .size([width, height])\r\n    .sticky(false)\r\n    .value(function(d) { return d.count; });\r\n\r\nvar div = d3.select(\"body\").append(\"div\")\r\n    .style(\"position\", \"relative\")\r\n    .style(\"width\", (width + margin.left + margin.right) + \"px\")\r\n    .style(\"height\", (height + margin.top + margin.bottom) + \"px\")\r\n    .style(\"left\", margin.left + \"px\")\r\n    .style(\"top\", margin.top + \"px\");\r\n\r\n/*d3.json(\"Testdaten_Projektstatus_treemap.json\", function(error, root) {\r\n  var node = div.datum(root).selectAll(\".node\")\r\n        .data(treemap.nodes)\r\n        .enter().append(\"div\")\r\n        .attr(\"class\", \"node\")\r\n        .call(position)\r\n        .style(\"background\", function(d) { return d.children ? color(d.name) : null; })\r\n        .text(function(d) { return d.children ? null : d.name; });\r\n\r\n  d3.selectAll(\"input\").on(\"change\", function change() {\r\n    var value = this.value === \"fruit\"\r\n        ? function() { return 1; }\r\n        : function(d) { return d.size; }; //es gibt den Wert wieder, der unter \"size\" gespeichert ist\r\n\r\n    node\r\n        .data(treemap.value(value).nodes)\r\n        .transition()\r\n        .duration(1500)\r\n        .call(position);\r\n  });*/\r\n    \r\n\r\n//});\r\nfunction loaddata(filename) {\r\n    d3.json(filename, function(error, root) {\r\n        console.log('loading...');\r\n          var node = div.datum(root).selectAll(\".node\")\r\n                .data(treemap.nodes);\r\n            node    \r\n                .enter().append(\"div\")\r\n                .attr(\"class\", \"node\")\r\n                .call(position)\r\n                .style(\"background\", function(d) { return d.children ? color(d.name) : null; })\r\n                .text(function(d) { return d.children ? null : d.name; });\r\n        \r\n            node.exit().remove();\r\n                  \r\n        var value = function(d) {return d.size || 1;}\r\n            node\r\n                .data(treemap.value(value).nodes)\r\n                .transition()\r\n                .duration(1500)\r\n                .text(function(d) { return d.children ? null : d.name; })\r\n                .call(position);\r\n        \r\n          });\r\n}\r\n\r\n\r\nd3.selectAll(\"input\").on(\"change\", function change() {\r\n        var filename = d3.select(this).attr('data-src');\r\n\r\n    loaddata(filename);\r\n        \r\n        \r\n  });\r\n    \r\nfunction position() {\r\n  this.style(\"left\", function(d) { return d.x + \"px\"; })\r\n      .style(\"top\", function(d) { return d.y + \"px\"; })\r\n      .style(\"width\", function(d) { return Math.max(0, d.dx - 1) + \"px\"; })\r\n      .style(\"height\", function(d) { return Math.max(0, d.dy - 1) + \"px\"; });\r\n}\r\n\r\n</script>\r\n</body>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}